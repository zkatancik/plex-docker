networks:
  default:
  vpn_net:

services:
  # ─── VPN client ────────────────────────────────────────────
  gluetun:
    image: qmcgaw/gluetun
    container_name: gluetun
    cap_add:
      - NET_ADMIN
    environment:
      - VPN_SERVICE_PROVIDER=protonvpn
      - VPN_TYPE=wireguard
      - WIREGUARD_PRIVATE_KEY=${WIREGUARD_PRIVATE_KEY}
      - WIREGUARD_ADDRESSES=10.2.0.2/32
      - TZ=${TZ}
      - DOCKER_VPN_NETWORK=vpn_net
      - DOCKER_ALLOWED_INCOMING_PORTS=8080,8191,9696
      - PUID=${PUID}
      - PGID=${PGID}
      - VPN_PORT_FORWARDING=on
      - DNS_SERVERS=1.1.1.1,1.0.0.1,8.8.8.8,8.8.4.4
      - HEALTH_VPN_DURATION_INITIAL=30s
      - HEALTH_SUCCESS_WAIT_DURATION=5s
      - FIREWALL_DEBUG=on
      - FIREWALL_INPUT_PORTS=8080,9696,8191
      - FIREWALL_OUTBOUND_SUBNETS=${FIREWALL_OUTBOUND_SUBNETS}
      - BLOCK_MALICIOUS=off
      - BLOCK_ADS=off
      - BLOCK_SURVEILLANCE=off
      - DOT=off
    dns:
      - 127.0.0.11
    ports:
      - "8080:8080/tcp"    # qBittorrent Web UI
      - "8191:8191"        # flaresolverr
      - "9696:9696"        # prowlarr
    volumes:
      - /Users/zack/plex-docker/gluetun:/gluetun
      - /Users/zack/plex-docker/gluetun:/tmp/gluetun 
    networks:
      - vpn_net
    devices:
      - /dev/net/tun:/dev/net/tun
    restart: unless-stopped
    

  # ─── qBittorrent through VPN ─────────────────────────────────────────
  qbittorrent:
    image: linuxserver/qbittorrent
    container_name: qbittorrent
    network_mode: "service:gluetun"
    depends_on:
      - gluetun
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - WEBUI_PORT=8080
    volumes:
      - /Volumes/HomeLabPool:/data
      - /Users/zack/plex-docker/qbittorrent:/config
    restart: unless-stopped

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    network_mode: "service:gluetun"                  # stays inside the VPN
    environment:
      - LOG_LEVEL=info
      - TZ=${TZ}
    restart: unless-stopped

  qb-port-sync:
    image: zkatancik/gluetun-qbittorrent-port-manager:latest
    container_name: qb-port-sync
    network_mode: "service:gluetun"                  # same net-ns as Qbit & Gluetun
    depends_on:
      - gluetun
      - qbittorrent
    environment:
      - PORT_FORWARDED=/tmp/gluetun/forwarded_port   # read the file Gluetun writes
      - QBITTORRENT_SERVER=${QBITTORRENT_SERVER}     # Qbit is localhost in-ns
      - QBITTORRENT_PORT=${QBITTORRENT_PORT}         # your WEBUI_PORT                     # default control-server port
      - RECHECK_TIME=60                              # seconds between checks
      - QBITTORRENT_USERNAME=${QBITTORRENT_USER}
      - QBITTORRENT_PASSWORD=${QBITTORRENT_PASS}
    volumes:
      - /Users/zack/plex-docker/gluetun:/tmp/gluetun:ro
    restart: unless-stopped

  # ─── Sonarr (TV shows) ────────────────────────────────────────────────
  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /Users/zack/plex-docker/sonarr:/config
      - /Volumes/HomeLabPool:/data
    ports:
      - "8989:8989"
    networks:
      - default
      - vpn_net
    restart: unless-stopped

  # ─── Radarr (Movies) ──────────────────────────────────────────────────
  radarr:
    image: linuxserver/radarr
    container_name: radarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /Users/zack/plex-docker/radarr:/config
      - /Volumes/HomeLabPool:/data
    ports:
      - "7878:7878"
    networks:
      - default
      - vpn_net
    restart: unless-stopped

  # ─── Unpackerr (Handles compressed downloads) ─────────────────────
  unpackerr:
    image: golift/unpackerr:latest
    container_name: unpackerr
    user: "${PUID}:${PGID}"
    networks:
      - vpn_net
    environment:
      - TZ=${TZ}
      - UN_SONARR_0_URL=http://sonarr:8989
      - UN_SONARR_0_API_KEY=${SONARR_API_KEY}
      - UN_SONARR_0_PATH=/data/downloads
      - UN_RADARR_0_URL=http://radarr:7878
      - UN_RADARR_0_API_KEY=${RADARR_API_KEY}
      - UN_RADARR_0_PATH=/data/downloads
      - UN_QBITTORRENT_0_URL=http://gluetun:8080
      - UN_QBITTORRENT_0_USER=${QBITTORRENT_USER}
      - UN_QBITTORRENT_0_PASS=${QBITTORRENT_PASS}
      - UN_QBITTORRENT_0_PATH=/data/downloads
    volumes:
      - /Users/zack/plex-docker/unpackerr:/config
      - /Volumes/HomeLabPool:/data
    restart: unless-stopped

  # ─── Recyclarr (Autofetch Sonarr and Radarr profiles) ---------------
  recyclarr:
    image: ghcr.io/recyclarr/recyclarr:latest
    container_name: recyclarr
    user: "${PUID}:${PGID}"
    networks:
      - default
    volumes:
      - /Users/zack/plex-docker/recyclarr:/config   # holds YAML & backups
    environment:
      - TZ=America/Chicago
      - CRON_SCHEDULE= 0 3,15 * * *
    restart: unless-stopped      

  # ─── Prowlarr (Indexer manager) ─────────────────────────────────────
  prowlarr:
    image: linuxserver/prowlarr
    container_name: prowlarr
    network_mode: "service:gluetun"
    depends_on:
      - gluetun
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /Users/zack/plex-docker/prowlarr:/config
    restart: unless-stopped

  # ─── Overseerr (Requests UI) ─────────────────────────────────────────
  overseerr:
    image: linuxserver/overseerr
    container_name: overseerr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /Users/zack/plex-docker/overseerr:/config
    ports:
      - "5055:5055"
    restart: unless-stopped
